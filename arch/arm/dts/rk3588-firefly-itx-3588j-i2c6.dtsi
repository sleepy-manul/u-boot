
#include <dt-bindings/usb/pd.h>

&i2c6 {
    status = "okay";
    pinctrl-names = "default";
    pinctrl-0 = <&i2c6m0_xfer>;

    pca9555: gpio@21 {
        compatible = "nxp,pca9555";
        reg = <0x21>;
        gpio-controller;
        #gpio-cells = <2>;
        //gpio-group-num is not used in the source code anymore,
        //it appears we somehow need to pass this as GPIO_BASE.
        //TODO
        // But no idea how...
        gpio-group-num = <200>;
        status = "okay";
    };

    hym8563: rtc@51 {
        compatible = "haoyu,hym8563";
        reg = <0x51>;
        #clock-cells = <0>;
        clock-output-names = "hym8563";
        pinctrl-names = "default";
        pinctrl-0 = <&hym8563_int>;
        interrupt-parent = <&gpio0>;
        interrupts = <RK_PB0 IRQ_TYPE_LEVEL_LOW>;
        wakeup-source;
        status = "okay";
    };

    usbc0: usb-typec@22 {
        compatible = "fcs,fusb302";
        reg = <0x22>;
        interrupt-parent = <&gpio0>;
        interrupts = <RK_PD3 IRQ_TYPE_LEVEL_LOW>;
        pinctrl-names = "default";
        pinctrl-0 = <&usbc0_int>;
        vbus-supply = <&vbus5v0_typec_pwr_en>;
        status = "okay";

        usb_con: connector {
            compatible = "usb-c-connector";
            label = "USB-C";
            data-role = "dual";
            power-role = "dual";
            try-power-role = "sink";
            op-sink-microwatt = <1000000>;
            sink-pdos =
                    <PDO_FIXED(5000, 1000, PDO_FIXED_USB_COMM)>;
            source-pdos =
                    <PDO_FIXED(5000, 3000, PDO_FIXED_USB_COMM)>;

            altmodes {
                displayport {
                    svid = /bits/ 16 <0xff01>;
                    vdo = <0xffffffff>;
                };
            };

            ports {
                #address-cells = <1>;
                #size-cells = <0>;

                port@0 {
                    reg = <0>;
					usbc0_hs: endpoint {
						remote-endpoint = <&usb_host0_xhci_drd_sw>;
					};
				};

				port@1 {
					reg = <1>;
                    usbc0_ss: endpoint {
                        remote-endpoint = <&usbdp_phy0_typec_ss>;
                    };
                };

				port@2 {
					reg = <2>;
                    usbc0_sbu: endpoint {
                        remote-endpoint = <&usbdp_phy0_typec_sbu>;
                    };
                };
            };
        };
    };

};
